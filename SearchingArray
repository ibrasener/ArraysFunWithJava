import java.util.Arrays;

public class SearchingArrays {

	public static void main(String[] args) {
		int[] list1 = {2, 4, 7, 10};
		int[] list2 = {2, 4, 7, 7, 7, 10};
		java.util.Arrays.fill(list1, 5); 
		System.out.println(java.util.Arrays.toString(list1));

		// Fill 5 to the whole array 
		java.util.Arrays.fill(list2, 1, 5, 8);
		System.out.println(java.util.Arrays.toString(list2));
		int[] list = {1, 4, 4, 2, 5, -3, 6, 2};
		int i = linearSearch(list,3);
		System.out.println(i);
	//	int[] list2 = {1, 4, 4, 2, 5, -3, 7, 2};
		java.util.Arrays.sort(list2);
	//	SelectionSort.SelectionSort(list);
		System.out.println(Arrays.toString(list2));
		int a= java.util.Arrays.binarySearch(list2,6);
		System.out.println(a);

		//int a=BinarySearch.binarySearch(list2,2);
		//int l = BinarySearch.binarySearch(list2, 1); // Returns â€“1
		
double[] numbers = {6.0, 4.4, 1.9, 2.9, 3.4, 3.5}; 
java.util.Arrays.sort(numbers);
System.out.println(Arrays.toString(numbers));
System.out.println(numbers[0]);
	}
	/** The method for finding a key in the list */
	public static int linearSearch(int[] list, int key) { 
		for (int i = 0; i < list.length; i++) {
	 if (key == list[i]) {
		return i;
		}

}
		return -1;
}
	
	}
